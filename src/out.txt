clocks 28
I 07 08 1D    # (r29=r7 INTOP r8)
A 02 13 15    # (r21=r2 FPADD r19)
M 03 04 02    # (r2  =r3 FPMUL r4)
L 1f 12 xx ABCD1234   # (r18 = MEM[r31+imm] which is MEM [ABCD1234])
S 10 12 xx ABCD1234  # (MEM[r16+imm] which is MEM [ABCD1234] = r18)
B 09 08 xx 1
B 09 05 xx 0
I 07 08 1D    # (r29=r7 INTOP r8)
Instruction about to get decoded: I 07 08 1D    # (r29=r7 INTOP r8)
r29 <- r7 INTOP r8
will map the following:
r29 -> I0
r7 -> I1
r8 -> I2
Instruction about to get decoded: A 02 13 15    # (r21=r2 FPADD r19)
r21 <- r2 FPADD r19
Instruction about to get decoded: M 03 04 02    # (r2  =r3 FPMUL r4)
r2 <- r3 FPMUL r4
Instruction about to get decoded: L 1f 12 xx ABCD1234   # (r18 = MEM[r31+imm] which is MEM [ABCD1234])
r18 <- ABCD1234 ( r31 )
1 2
2 2
3 2
4 2
A 02 13 15    # (r21=r2 FPADD r19)
M 03 04 02    # (r2  =r3 FPMUL r4)
L 1f 12 xx ABCD1234   # (r18 = MEM[r31+imm] which is MEM [ABCD1234])
S 10 12 xx ABCD1234  # (MEM[r16+imm] which is MEM [ABCD1234] = r18)
Instruction about to get decoded: I 07 08 1D    # (r29=r7 INTOP r8)
r29 <- r7 INTOP r8
will map the following:
r29 -> I3
r7 -> I4
r8 -> I5
Instruction about to get decoded: S 10 12 xx ABCD1234  # (MEM[r16+imm] which is MEM [ABCD1234] = r18)
r18 -> ABCD1234 ( r16 )
Instruction about to get decoded: B 09 08 xx 1
BEQ, r9 , r8 ,xx, 1
Instruction about to get decoded: B 09 05 xx 0
BEQ, r9 , r5 ,xx, 0
8 3
5 3
6 3
7 3
B 09 08 xx 1
B 09 05 xx 0
I 07 08 1D    # (r29=r7 INTOP r8)
A 02 13 15    # (r21=r2 FPADD r19)
Instruction about to get decoded: A 02 13 15    # (r21=r2 FPADD r19)
r21 <- r2 FPADD r19
Instruction about to get decoded: M 03 04 02    # (r2  =r3 FPMUL r4)
r2 <- r3 FPMUL r4
Instruction about to get decoded: L 1f 12 xx ABCD1234   # (r18 = MEM[r31+imm] which is MEM [ABCD1234])
r18 <- ABCD1234 ( r31 )
Instruction about to get decoded: S 10 12 xx ABCD1234  # (MEM[r16+imm] which is MEM [ABCD1234] = r18)
r18 -> ABCD1234 ( r16 )
9 4
10 4
11 4
12 4
M 03 04 02    # (r2  =r3 FPMUL r4)
L 1f 12 xx ABCD1234   # (r18 = MEM[r31+imm] which is MEM [ABCD1234])
S 10 12 xx ABCD1234  # (MEM[r16+imm] which is MEM [ABCD1234] = r18)
B 09 08 xx 1
Instruction about to get decoded: A 02 13 15    # (r21=r2 FPADD r19)
r21 <- r2 FPADD r19
Instruction about to get decoded: B 09 08 xx 1
BEQ, r9 , r8 ,xx, 1
Instruction about to get decoded: B 09 05 xx 0
BEQ, r9 , r5 ,xx, 0
Instruction about to get decoded: I 07 08 1D    # (r29=r7 INTOP r8)
r29 <- r7 INTOP r8
will map the following:
r29 -> I6
r7 -> I7
r8 -> I8
16 5
13 5
14 5
15 5
B 09 05 xx 0
I 07 08 1D    # (r29=r7 INTOP r8)
A 02 13 15    # (r21=r2 FPADD r19)
M 03 04 02    # (r2  =r3 FPMUL r4)
Instruction about to get decoded: M 03 04 02    # (r2  =r3 FPMUL r4)
r2 <- r3 FPMUL r4
Instruction about to get decoded: L 1f 12 xx ABCD1234   # (r18 = MEM[r31+imm] which is MEM [ABCD1234])
r18 <- ABCD1234 ( r31 )
Instruction about to get decoded: S 10 12 xx ABCD1234  # (MEM[r16+imm] which is MEM [ABCD1234] = r18)
r18 -> ABCD1234 ( r16 )
Instruction about to get decoded: B 09 08 xx 1
BEQ, r9 , r8 ,xx, 1
17 6
18 6
19 6
20 6
L 1f 12 xx ABCD1234   # (r18 = MEM[r31+imm] which is MEM [ABCD1234])
S 10 12 xx ABCD1234  # (MEM[r16+imm] which is MEM [ABCD1234] = r18)
B 09 08 xx 1
B 09 05 xx 0
Instruction about to get decoded: M 03 04 02    # (r2  =r3 FPMUL r4)
r2 <- r3 FPMUL r4
Instruction about to get decoded: B 09 05 xx 0
BEQ, r9 , r5 ,xx, 0
Instruction about to get decoded: I 07 08 1D    # (r29=r7 INTOP r8)
r29 <- r7 INTOP r8
will map the following:
r29 -> I9
r7 -> I10
r8 -> I11
Instruction about to get decoded: A 02 13 15    # (r21=r2 FPADD r19)
r21 <- r2 FPADD r19
24 7
21 7
22 7
23 7
Instruction about to get decoded: L 1f 12 xx ABCD1234   # (r18 = MEM[r31+imm] which is MEM [ABCD1234])
r18 <- ABCD1234 ( r31 )
Instruction about to get decoded: S 10 12 xx ABCD1234  # (MEM[r16+imm] which is MEM [ABCD1234] = r18)
r18 -> ABCD1234 ( r16 )
Instruction about to get decoded: B 09 08 xx 1
BEQ, r9 , r8 ,xx, 1
Instruction about to get decoded: B 09 05 xx 0
BEQ, r9 , r5 ,xx, 0
25 8
26 8
27 8
28 8
